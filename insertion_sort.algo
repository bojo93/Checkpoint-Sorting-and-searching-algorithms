

ALGORITHM myinsertion_sort
VAR
    i, j, n, arr_key : INTEGER;
    set_array : ARRAY_OF INTEGER[100];  // limit sort size to 100 numbers
BEGIN
    // Get input from user
    REPEAT
        Write ("Number of items to be sorted (between 1 and 100): ");
        Read (n);
    UNTIL (n > 0 AND n <= 100)

    // Take user inputs to create an array to be used
    Write ("Enter numbers sequentially:");
    FOR i FROM 0 TO n-1 STEP 1  DO
        Read (set_array[i]);
    END_FOR

    FOR i FROM 1 TO n-1 STEP 1  DO

    // Assign item to array_key
        arr_key = set_array[i]; 

         // Set index for previous item                            
        j = i - 1;

        // Loop while the index is more than 0 and the current array_key is greater than the previous jth element                                        
        WHILE (j > 0 and set_array[j] > arr_key) DO 

        // Increase the position j of the previous element by 1        
            set_array[j + 1] = set_array[j];

            // Create a position at j - 1 as j                
            j = j - 1;

            // Move the element into the j location                                      
            set_array[j + 1] = arr_key;                     
        END_WHILE            
    END_FOR


// Display new array
    Write (set_array);                                     

END
